name: Run Tests

on:
  pull_request:
    branches:
      - main # Déclencher la pipeline pour les pull requests vers la branche main
  push:
    branches:
      - main # Déclencher la pipeline pour les pushs vers la branche main

jobs:
  test:
    runs-on: ubuntu-latest # Exécuter sur une machine virtuelle Ubuntu

    steps:
      # Étape 1 : Récupérer le code du dépôt
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2 : Configurer JDK
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # Distribution du JDK (peut être temurin, zulu, etc.)
          java-version: '17' # Version de Java (ajustez en fonction de votre projet)

      # Étape 3 : Construire le projet avec Maven
      - name: Build with Maven
        run: mvn clean install -DskipTests=true # Construire le projet sans exécuter les tests
        
      - name: Run SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=master-devops-cloud2_YASSINE-GHALIM\
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.organization=master-devops-cloud2 \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        

#      # Étape 4 : Exécuter les tests
#      - name: Run Tests
#        run: mvn test
#
#      # Étape 5 (Optionnel) : Télécharger les résultats des tests comme artefacts
#      - name: Upload Test Results (Optional)
#        if: always() # Cette étape s'exécute même si les tests échouent
#        uses: actions/upload-artifact@v3
#        with:
#          name: test-results
#          path: target/surefire-reports/ # Répertoire contenant les rapports de tests Maven
